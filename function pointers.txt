==>> add using function pointers
#include<stdio.h>
int call(int ,int );
int main(){
	int a=5,b=7;
int (*ptr) (int ,int);
	ptr=&call;
	
printf("%d",ptr(a,b));

}

int call(int a,int b){
	return a+b;
}
o/p:
12
--------------------------------
Process exited after 0.1216 seconds with return value 0
Press any key to continue . . .

==> printing string using function pointers
#include<stdio.h>
void print(const char * );
int main(){
	
	void (*ptr) (const char * )=&print;
	//ptr=&print;
	ptr("pavan kumar");
	
}

void print(const char * a){
	printf("%s",a);
}
o/p:
pavan kumar
--------------------------------
Process exited after 0.04037 seconds with return value 0
Press any key to continue . . .

====>> Array of function pointers
#include<stdio.h>
int add(int ,int);
int sub(int ,int);
int mul(int ,int);

int main(){
	int i=0,a=5,b=9;
	int (*ptr[]) (int ,int)={add,sub,mul};
	
	while(i<=2)
	{ printf("%d ",ptr[i](a,b));
	i++;
		
	}
//	printf("%d",ptr(a,b));
	
}

int add(int a,int b){
	return a+b;
}

int sub(int a,int b){
	return a-b;}
	
int mul(int a,int b){
	return a*b;
}
o/p:
14 -4 45
--------------------------------
Process exited after 0.0522 seconds with return value 0
Press any key to continue . . .

==>> sorting array using function pointers
#include<stdio.h>
#define n 6
void call(int []);
int main(){
	int a[n]={4,6,2,5,1,3},i;
call(a);
	

}

void call(int a[]){
	int i,j,temp;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(a[i]>a[j]){
				temp=a[i];
				a[i]=a[j];
				a[j]=temp;
			}
		}
	}
for(i=0;i<n;i++){
	printf("%d ",a[i]);
}
 
}
o/p:
6 5 4 3 2 1
--------------------------------
Process exited after 0.1103 seconds with return value 0
Press any key to continue . . .


