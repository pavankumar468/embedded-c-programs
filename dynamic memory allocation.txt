===>>structures using malloc 
#include<stdio.h>
#include<stdlib.h>
struct emp{
	int no;
	char name[20];
	float sal;
};
int main(){
	struct emp *ptr;
	 ptr= (struct emp *)malloc(sizeof(struct emp));
	 
	 if(ptr==NULL){
	 	printf("no memory is allocated:");
	 }else{
	 	
	 		printf("enter non,name,sal:");
	 		scanf("%d %s %f",&ptr->no,ptr->name,&ptr->sal);
	 }
	 
	 	printf("no=%d,name=%s, sal= %f",ptr->no,ptr->name,ptr->sal);
	
}
o/p:
enter non,name,sal:12 pavan 23444455
no=12,name=pavan, sal= 23444454.000000
--------------------------------
Process exited after 9.15 seconds with return value 0
Press any key to continue . . .

==>> structure 1D using malloc
#include<stdio.h>
#include<stdlib.h>
struct emp{
	int no;
	char name[20];
	float sal;
};
int main(){
	struct emp *ptr;
	ptr=(struct emp *)malloc(4*sizeof(struct emp));
	int i;
	
	for(i=0;i<4;i++){
		printf("enter no[%d],name[%d],sal[%d]",i,i,i);
		scanf("%d %s %f",&(ptr+i)->no,(ptr+i)->name,&(ptr+i)->sal);
	}
		for(i=0;i<4;i++){
			
	
		printf(" \n no[%d]=%d, name[%d]=%s,sal[%d]=%f",i,(ptr+i)->no,i,(ptr+i)->name,i,(ptr+i)->sal);
	}
	
}
o/p:
enter no[0],name[0],sal[0]1 pavan 23467
enter no[1],name[1],sal[1]2 kumar 34567
enter no[2],name[2],sal[2]3 sasi 245777
enter no[3],name[3],sal[3]4 addf 79076

 no[0]=1, name[0]=pavan,sal[0]=23467.000000
 no[1]=2, name[1]=kumar,sal[1]=34567.000000
 no[2]=3, name[2]=sasi,sal[2]=245777.000000
 no[3]=4, name[3]=addf,sal[3]=79076.000000
--------------------------------
Process exited after 48.27 seconds with return value 0
Press any key to continue . . .




===>> sum array elements using malloc
#include<stdio.h>
#include<stdlib.h>
int main(){
	int n,i;
	printf("enter no of elements of array:");
	scanf("%d",&n);
	 int *ptr,sum=0;
	 ptr=(int *)malloc(n*sizeof(int));

if(ptr==NULL){
	printf("no memory is allocated:");
}
else{	printf("enter elements:");
		for(i=0;i<n;i++){
			scanf("%d",ptr);
			sum=sum+(*ptr);
			ptr++;
		}
	
	printf("%d",sum);
	free(ptr);
	
	printf("%d",ptr);
}}
o/p:
enter no of elements of array:4
enter elements:2 6 7 8
23
--------------------------------
Process exited after 10.97 seconds with return value 3221226356
Press any key to continue . . .

===>> strings using malloc
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main(){
	
int n=12;
char *ptr;
ptr=(char *)malloc(n*sizeof(char));

if(ptr==NULL){
	printf("no memory:");
}else{
	strcpy(ptr,"pavan kumar");
}
printf("%s",ptr);

}
o/p:
pavan kumar
--------------------------------
Process exited after 0.03161 seconds with return value 0
Press any key to continue . . .

===>> arrays using calloc 
#include<stdio.h>
#include<stdlib.h>
int main(){
	int n,i;
	printf("enter nof elements:");
	scanf("%d",&n);
	int *ptr;
	ptr=(int *)calloc(n,sizeof(int));
	for(i=0;i<n;i++){
		scanf("%d",(ptr+i));
	}
		for(i=0;i<n;i++){
		printf(" %d ",*(ptr+i));
	}	
}
o/p:
enter nof elements:5
12 34 567 34 377
 12  34  567  34  377
--------------------------------
Process exited after 9.954 seconds with return value 0
Press any key to continue . . .

===>> sum of elements of array using calloc 
	
#include<stdio.h>
#include<stdlib.h>
int main(){
	int i,n,sum=0;
	printf("no of elements:");
	scanf("%d",&n);
	
	int *ptr;
	ptr=(int *)calloc(n,sizeof(int));
	
	printf("enter array elements:");
	for(i=0;i<n;i++){
		scanf("%d",(ptr+i));
		sum=sum+(*(ptr+i));
	}	
	
printf("%d",sum);

}
o/p:no of elements:5
enter array elements:2 3 5 7 8
25
--------------------------------
Process exited after 8.289 seconds with return value 0
Press any key to continue . . .


===>> arrays in calloc
#include<stdio.h>
#include<stdlib.h>
int main(){
	int i,n=5,*ptr;
ptr= (int *)calloc(n,sizeof(int));
if(ptr==NULL){
	printf("no memory");
}else{

for(i=0;i<n;i++){
	printf("enter array elements ptr[%d]:",i);
	scanf("%d",(ptr+i));
}}

for(i=0;i<n;i++){
	printf(" ptr[%d]=%d",i,*(ptr+i));
}

}

o/p:
enter array elements ptr[0]:22
enter array elements ptr[1]:34
enter array elements ptr[2]:5668
enter array elements ptr[3]:234
enter array elements ptr[4]:567
 ptr[0]=22 ptr[1]=34 ptr[2]=5668 ptr[3]=234 ptr[4]=567
--------------------------------
Process exited after 9.63 seconds with return value 0
Press any key to continue . . .


===>> Array using realloc and malloc fns.
#include<stdio.h>
#include<stdlib.h>
int main(){
int *p,n=5,i,m=8;

p=(int*)calloc(n,sizeof(int));

	n++;
	p=(int *)realloc(p,m*sizeof(int));
	
	printf("enter array:");
for(i=0;i<m;i++){
scanf("%d",(p+i));	
}
for(i=0;i<m;i++){
printf("%d ",*(p+i));}
}
o/p:
enter array:2 3 4 5 6 7 8 9
2 3 4 5 6 7 8 9
--------------------------------
Process exited after 6.671 seconds with return value 0
Press any key to continue . . .


===>>structure 1D using calloc
#include<stdio.h>
#include<stdlib.h>
struct emp{
	int no;
	char name[20];
	float sal;
};
int main(){
	struct emp *ptr;
	ptr=(struct emp *)calloc(4,sizeof(struct emp));
	int i;
	
	for(i=0;i<4;i++){
		printf("enter no[%d],name[%d],sal[%d]",i,i,i);
		scanf("%d %s %f",&(ptr+i)->no,(ptr+i)->name,&(ptr+i)->sal);
	}
		for(i=0;i<4;i++){
			
	
		printf(" \n no[%d]=%d, name[%d]=%s,sal[%d]=%f",i,(ptr+i)->no,i,(ptr+i)->name,i,(ptr+i)->sal);
	}
	
}
o/p:
enter no[0],name[0],sal[0]1 pavan 23456
enter no[1],name[1],sal[1]2 kunar 34576
enter no[2],name[2],sal[2]3 janfs 45678
enter no[3],name[3],sal[3]4 asdsf 56689

 no[0]=1, name[0]=pavan,sal[0]=23456.000000
 no[1]=2, name[1]=kunar,sal[1]=34576.000000
 no[2]=3, name[2]=janfs,sal[2]=45678.000000
 no[3]=4, name[3]=asdsf,sal[3]=56689.000000
--------------------------------
Process exited after 31.56 seconds with return value 0
Press any key to continue . . .

==> string using calloc
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main(){
	char *ptr;
	int n=20;
	ptr=(char *)calloc(n,sizeof(char));
	
	strcpy(ptr,"sonic master");
	puts(ptr);
}
o/p:
sonic master
--------------------------------
Process exited after 0.03392 seconds with return value 0
Press any key to continue . . .









 











